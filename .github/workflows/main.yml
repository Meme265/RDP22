name: Multi RDP with Proxy and Tailscale (10 Sessions)

on:
  workflow_dispatch:

jobs:
  rdp-proxy:
    runs-on: windows-latest
    timeout-minutes: 360
    strategy:
      matrix:
        proxy_index: [0,1,2,3,4,5,6,7,8,9]  # 10 proxies total

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Read proxy line
      id: read_proxy
      shell: pwsh
      env:
        proxy_index: ${{ matrix.proxy_index }}
      run: |
        $proxies = Get-Content proxies.txt
        $idx = [int]$env:proxy_index
        if ($idx -ge $proxies.Count) {
          Write-Error "proxy_index $idx out of range for proxies.txt count $($proxies.Count)"
          exit 1
        }
        $line = $proxies[$idx].Trim()
        $split = $line -split "\s+"
        $ipport = $split[0]
        $userpass = $split[1]
        echo "iproxy=$ipport" >> $env:GITHUB_OUTPUT
        echo "uproxy=$userpass" >> $env:GITHUB_OUTPUT
        Write-Host "Using proxy: $ipport with userpass $userpass"

    - name: Set system proxy environment variables
      shell: pwsh
      run: |
        $ipport = "${{ steps.read_proxy.outputs.iproxy }}"
        $userpass = "${{ steps.read_proxy.outputs.uproxy }}"
        $proxyUri = "http://$userpass@$ipport"
        [Environment]::SetEnvironmentVariable('http_proxy', $proxyUri, [EnvironmentVariableTarget]::Machine)
        [Environment]::SetEnvironmentVariable('https_proxy', $proxyUri, [EnvironmentVariableTarget]::Machine)
        Write-Host "System proxy set to $proxyUri"

    - name: Enable RDP and firewall rules
      shell: pwsh
      run: |
        Set-ItemProperty -Path HKLM:\System\CurrentControlSet\Control\Terminal Server -Name fDenyTSConnections -Value 0 -Force
        netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389

    - name: Create RDP user
      shell: pwsh
      run: |
        $password = 'TestPass123!'
        $securePass = ConvertTo-SecureString $password -AsPlainText -Force
        New-LocalUser -Name 'rdpsession' -Password $securePass -AccountNeverExpires
        Add-LocalGroupMember -Group 'Remote Desktop Users' -Member 'rdpsession'
        Write-Host "Created user 'rdpsession' with password $password"

    - name: Install Tailscale
      shell: pwsh
      run: |
        $url = 'https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi'
        $file = "$env:TEMP\tailscale.msi"
        Invoke-WebRequest -Uri $url -OutFile $file
        Start-Process -FilePath msiexec.exe -ArgumentList "/i `"$file`" /quiet /norestart" -Wait
        Remove-Item $file

    - name: Connect to Tailscale
      shell: pwsh
      env:
        proxy_index: ${{ matrix.proxy_index }}
        TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
      run: |
        $hostName = "gh-runner-$env:proxy_index"
        Write-Host "Connecting Tailscale as $hostName"
        & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTH_KEY --hostname=$hostName
        $tsIP = $null
        $count = 0
        while (-not $tsIP -and $count -lt 20) {
          $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          Start-Sleep -Seconds 5
          $count++
        }
        if (-not $tsIP) {
          Write-Error 'Failed to get Tailscale IP'
          exit 1
        }
        Write-Host "Tailscale IP: $tsIP"
        echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

    - name: Show session info
      shell: pwsh
      run: |
        Write-Host "Session $env:proxy_index Tailscale IP: $env:TAILSCALE_IP"
        Write-Host "RDP User: rdpsession"
        Write-Host "RDP Password: TestPass123!"

    - name: Keep runner alive
      shell: pwsh
      run: |
        while ($true) { Start-Sleep -Seconds 5 }
